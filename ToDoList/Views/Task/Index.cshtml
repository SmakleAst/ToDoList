@using ToDoList.Domain.Enum;
@{
    ViewData["Title"] = "Home Page";
}

<h4 class="d-flex justify-content-between align-items-center mb-3">
    <span class="text-muted">Дела на сегодня</span>
    <span class="badge badge-secondary badge-pill text-muted" id="countOfTasks"></span>
</h4>
<form id="createTaskForm">
    <div>
        <input name="description" class="form-group col-md-8" placeholder="Задача..." type="text" />
        <select name="priority" asp-items="Html.GetEnumSelectList<Priority>()" class="form-group col-md-3 mb-3"></select>
    </div>
    <button id="createTask" hidden class="btn btn-primary col-md-12">Создать</button>
</form>
<ul class="list-group mb-3" id="tasksList"></ul>

<br />
<div class="row">
    <div class="form-group col-md-6">
        <label class="col-form-label">Описание</label>
        <input name="descriptionTask" type="text" class="form-control"/>
    </div>
    <div class="form-group col-md-6">
        <label class="col-form-label">Приоритет</label>
        <select id="prioritySearch" class="form-control mb-2" asp-items="Html.GetEnumSelectList<Priority>()"></select>
    </div>
</div>
<br />

<table class="table table-dark table-hover" id="taskTableId">
    <thead>
        <tr>
            <th>Сложность</th>
            <th>Описание</th>
            <th>Готовность</th>
            <th>Действие</th>
        </tr>
    </thead>
</table>333333

@section Scripts
{
    <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://cdn.datatables.net/1.13.4/js/jquery.dataTables.min.js"></script>
    <script>

        const swalWithBootstrapButtons = Swal.mixin({
            customClass: {
                confirmButton: 'btn btn-success',
            },
            buttonsStyling: false
        })

        let dataTable = $('#taskTableId').DataTable({
            info: true,
            serverSide: true,
            searching: false,
            paging: false,
            sorting: false,
            ajax: {
                url: '@Url.Action("TaskHandler")',
                method: 'POST',
                data: model
            },
            columns: [
                {data: 'priority'},
                {data: 'description'},
                {data: 'isCompleted'},
                {
                    data: null,
                    sortable: false,
                    render: function (data, type) {
                        return '<button class="btn btn-success btn-sm center-block">Выполнить</button>'
                    }
                }
            ],
            createdRow: function (nRow, data) {
                var handlerComplete = function () {
                    swalWithBootstrapButtons.fire({
                        title: 'Вы уверены?',
                        icon: 'warning',
                        confirmButtonText: 'Да',
                        reverseButtons: true
                    }).then((result) => {
                        if (result.isConfirmed) {
                            console.log("%d", data.isCompleted);
                            $.ajax({
                                type: 'POST',
                                url: '@Url.Action("ChangeTaskCompleteStatus")',
                                data: {
                                    id: data.id,
                                    isCompleted: data.isCompleted
                                },
                                success: function (response) {
                                    Swal.fire({
                                        title: 'Информация',
                                        text: response.description,
                                        icon: 'success',
                                        confimButtonText: 'Ok'
                                    })
                                    dataTable.draw();
                                },
                                error: function (response) {
                                    Swal.fire({
                                        title: 'Информация',
                                        text: response.responseJSON.description,
                                        icon: 'error',
                                        confimButtonText: 'Ok'
                                    })
                                }
                            })
                        } 
                    })
                }

                for (var i = 0; i < dataTable.columns().header().length - 1; i++) {
                    $('td', nRow).eq(i).css('cursor', 'pointer');

                    $('td', nRow).eq(i).on('click', null);
                }
                $('td button', nRow).on('click', handlerComplete);
            }
        })

        function model() {
            return {
                Description: $('input[name="descriptionTask"]').val(),
                Priority: $('#prioritySearch option:selected').val(),
            }
        }

        $('input[name="descriptionTask"]').on('change', function () {
            dataTable.draw();
        })

        $('#prioritySearch').on('change', function () {
            dataTable.draw();
        })

        $('#createTask').on('click', function (e){
            e.preventDefault();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("Create", "Task")',
                data: $('#createTaskForm').serialize(),
                success: function (response) {
                    Swal.fire({
                        title: 'Информация',
                        text: response.description,
                        icon: 'success',
                        confimButtonText: 'Ok'
                    })
                },
                error: function (response) {
                    Swal.fire({
                        title: 'Информация',
                        text: response.responseJSON.description,
                        icon: 'error',
                        confimButtonText: 'Ok'
                    })
                }
            })
        })
    </script>
}